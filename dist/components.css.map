{
  "version": 3,
  "file": "components.css",
  "sources": [
    "..\\Dashboard.svelte",
    "..\\Scaffold.svelte",
    "..\\DetailPage.svelte",
    "..\\Entry.svelte",
    "..\\TypeButton.svelte",
    "..\\LoadingSpinner.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import firebase from \"firebase/app\";\r\n  import \"firebase/firestore\";\r\n  import { toastMessage } from \"../store/store\";\r\n  import { fade } from \"svelte/transition\";\r\n  import CategoryListTile from \"./CategoryListTile.svelte\";\r\n  import { CountUp } from \"countup.js\";\r\n  import Chart from \"./Chart.svelte\";\r\n\r\n  let db, queryInterval;\r\n  let getDataPromise = fetchData(queryInterval);\r\n  let rawData = [];\r\n  let categorizedData = [];\r\n  let currentInterval = \"1M\";\r\n  let totalSpend = 0;\r\n\r\n  onMount(() => {\r\n    if (localStorage.getItem(\"interval\")) {\r\n      currentInterval = localStorage.getItem(\"interval\");\r\n    }\r\n\r\n    if (localStorage.getItem(\"categorizedCache\")) {\r\n      categorizedData = JSON.parse(localStorage.getItem(\"categorizedCache\"));\r\n    }\r\n\r\n    changeInterval(currentInterval);\r\n  });\r\n\r\n  function changeInterval(interval) {\r\n    currentInterval = interval;\r\n    localStorage.setItem(\"interval\", currentInterval);\r\n\r\n    if (localStorage.getItem(\"rawCache\")) {\r\n      rawData = JSON.parse(localStorage.getItem(\"rawCache\"));\r\n    }\r\n\r\n    db = firebase.firestore();\r\n\r\n    queryInterval = getQueryInterval(currentInterval);\r\n\r\n    if (rawData.length > 0) {\r\n      const sortedRawData = rawData.sort(\r\n        (a, b) => new Date(a.addedOn) - new Date(b.addedOn)\r\n      );\r\n      const earliestDate = sortedRawData[0].addedOn;\r\n      const lastDate = sortedRawData[sortedRawData.length - 1].addedOn;\r\n      const currentDate = new Date().toISOString().substring(0, 10);\r\n\r\n      if (queryInterval >= earliestDate) {\r\n        //Existing data already covers queryInterval, only get new data after last date\r\n        getDataPromise = fetchData(lastDate, currentDate);\r\n      } else {\r\n        //Only get the missing portion between queryInterval and the earliest existing data\r\n        getDataPromise = fetchData(queryInterval, earliestDate);\r\n      }\r\n    } else {\r\n      getDataPromise = fetchData(\r\n        queryInterval,\r\n        new Date().toISOString().substring(0, 10)\r\n      );\r\n    }\r\n  }\r\n\r\n  function getQueryInterval(interval) {\r\n    const currentDate = new Date(new Date().setDate(1));\r\n\r\n    let queryDate;\r\n\r\n    if (interval === \"1M\") {\r\n      queryDate = new Date(currentDate.setDate(1));\r\n    } else if (interval === \"6M\") {\r\n      queryDate = new Date(currentDate.setMonth(currentDate.getMonth() - 6));\r\n    } else if (interval === \"1Y\") {\r\n      queryDate = new Date(currentDate.setMonth(0));\r\n    } else if (interval === \"All\") {\r\n      queryDate = new Date(\"1999-01-01\");\r\n    }\r\n\r\n    return parseDateString(\r\n      queryDate.getFullYear(),\r\n      queryDate.getMonth() + 1,\r\n      queryDate.getDate()\r\n    );\r\n  }\r\n\r\n  function parseDateString(year, month, date) {\r\n    let monthString, dateString;\r\n\r\n    if (month < 10) {\r\n      monthString = \"0\" + month;\r\n    } else {\r\n      monthString = month;\r\n    }\r\n\r\n    if (date < 10) {\r\n      dateString = \"0\" + date;\r\n    } else {\r\n      dateString = date;\r\n    }\r\n\r\n    return year + \"-\" + monthString + \"-\" + dateString;\r\n  }\r\n\r\n  async function fetchData(queryInterval, endDate) {\r\n    toastMessage.set(\"Updating...\");\r\n\r\n    let rawData = [];\r\n    let categorizedData = [];\r\n    let snapshot;\r\n\r\n    try {\r\n      snapshot = await db\r\n        .collection(\"expenses\")\r\n        .where(\"date\", \">=\", queryInterval)\r\n        .where(\"date\", \"<=\", endDate)\r\n        .get();\r\n\r\n      console.log(queryInterval, endDate, snapshot.size);\r\n    } catch (error) {\r\n      toastMessage.set(error.message);\r\n      setTimeout(() => toastMessage.set(\"\"), 3000);\r\n    }\r\n\r\n    let rawCache = [];\r\n\r\n    if (localStorage.getItem(\"rawCache\")) {\r\n      rawCache = JSON.parse(localStorage.getItem(\"rawCache\"));\r\n    }\r\n\r\n    //Only append new data if they do not exist in rawCache\r\n    snapshot.forEach(doc => {\r\n      const data = doc.data();\r\n      if (rawCache.filter(rawData => rawData.id === data.id).length === 0) {\r\n        data.id = doc.id;\r\n        rawCache.push(data);\r\n      }\r\n    });\r\n\r\n    //Only keep data that is at or after the real queryInterval (not the modified queryInterval which is to reduce firestore reads)\r\n    rawData = rawCache.filter(\r\n      rawData => rawData.date >= getQueryInterval(currentInterval)\r\n    );\r\n\r\n    toastMessage.set(\"\");\r\n\r\n    localStorage.setItem(\"rawCache\", JSON.stringify(rawCache));\r\n\r\n    const types = [...new Set(rawData.map(item => item.type))];\r\n\r\n    types.forEach(type => {\r\n      categorizedData.push({\r\n        type: type,\r\n        data: [],\r\n        sum: 0,\r\n        items: 0,\r\n        percentage: 0\r\n      });\r\n    });\r\n\r\n    categorizedData.forEach(categoryData => {\r\n      rawData.forEach(data => {\r\n        if (data.type === categoryData.type) {\r\n          categoryData.data.push(data);\r\n        }\r\n      });\r\n\r\n      //Get sum of amounts for each category\r\n      let sum = 0;\r\n      categoryData.data.forEach(data => {\r\n        sum += data.amount;\r\n      });\r\n      categoryData.sum = Math.round(sum * 100) / 100;\r\n\r\n      //Get number of data items for each category\r\n      categoryData.items = categoryData.data.length;\r\n    });\r\n\r\n    //Sort by category sum\r\n    categorizedData.sort((a, b) => b.sum - a.sum);\r\n\r\n    //Get percentage proportion for each category\r\n    totalSpend = categorizedData.reduce(\r\n      (a, b) => (a.sum ? a.sum : a + b.sum),\r\n      0\r\n    );\r\n    categorizedData.forEach(data => {\r\n      data.percentage = (data.sum / totalSpend) * 100;\r\n    });\r\n\r\n    localStorage.setItem(\"categorizedCache\", JSON.stringify(categorizedData));\r\n\r\n    const counter = new CountUp(\"totalSpend\", totalSpend, {\r\n      prefix: \"$\",\r\n      duration: 1\r\n    });\r\n    counter.start();\r\n\r\n    return categorizedData;\r\n  }\r\n</script>\r\n\r\n<style type=\"text/postcss\">.interval-button{border-radius:9999px;background-color:#e2e8f0;color:#fff;padding-top:.25rem;padding-bottom:.25rem;font-weight:700;width:25%;flex-grow:1;transition:background-color .35s}.interval-button:not(:last-child){margin-right:.5rem}.interval-button.active{background-color:hsl(var(--secondary-hue),50%,50%)}</style>\r\n\r\n<div class=\"flex flex-col my-8\">\r\n  <span class=\"w-full mb-1 text-4xl text-center font-bold\" id=\"totalSpend\">\r\n    $0\r\n  </span>\r\n  <span class=\"w-full text-center text-gray-600 text-sm font-light mb-8\">\r\n    Total spend\r\n  </span>\r\n  <!-- <Chart datas={rawData} queryInterval={getQueryInterval(currentInterval)} /> -->\r\n  <div class=\"flex flex-row justify-around overflow-x-scroll mb-8 mx-4\">\r\n    {#each ['1M', '6M', '1Y', 'All'] as interval}\r\n      <button\r\n        class=\"interval-button {currentInterval === interval ? 'active' : ''}\"\r\n        on:click={() => changeInterval(interval)}>\r\n        {interval}\r\n      </button>\r\n    {/each}\r\n  </div>\r\n  {#await getDataPromise then result}\r\n    {#each result as data, index}\r\n      <CategoryListTile {data} {index} />\r\n    {/each}\r\n  {/await}\r\n</div>\r\n",
    "<script>\r\n  import { view, toastMessage } from \"../store/store\";\r\n  import Entry from \"./Entry.svelte\";\r\n  import Toast from \"./Toast.svelte\";\r\n\r\n  function setView(viewToSet) {\r\n    handleRouting(viewToSet);\r\n    view.set(viewToSet);\r\n  }\r\n\r\n  function handleRouting(newPage) {\r\n    window.history.pushState(\r\n      {\r\n        page: newPage\r\n      },\r\n      null,\r\n      \"?page=\" + newPage\r\n    );\r\n  }\r\n</script>\r\n\r\n<style type=\"text/postcss\">.navbar{box-shadow:0 -3px 8px 0 hsla(0,0%,83.9%,.9);height:64px;width:100%;display:flex;position:fixed;bottom:0;background-color:#fff;fill:currentColor}.navbar .active{color:hsl(var(--primary-hue),65%,45%);transition:all .18s;font-size:1rem}.navbar .inactive{transition:all .18s;color:#a0aec0;font-size:.875rem}.content{position:absolute;width:100%;top:0;overflow-x:hidden;bottom:64px}</style>\r\n\r\n<div class=\"content\">\r\n  <slot />\r\n  {#if $toastMessage !== ''}\r\n    <Toast message={$toastMessage} />\r\n  {/if}\r\n</div>\r\n<nav class=\"navbar\">\r\n  <button\r\n    class=\"flex flex-col items-center justify-center w-1/2 py-1 {$view === 'dashboard' ? 'active' : 'inactive'}\"\r\n    on:click={() => setView('dashboard')}>\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-8 h-8\" viewBox=\"0 0 24 24\">\r\n      <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\r\n      <path\r\n        d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9\r\n        2-2V5c0-1.1-.9-2-2-2zM8 17c-.55 0-1-.45-1-1v-5c0-.55.45-1 1-1s1 .45 1\r\n        1v5c0 .55-.45 1-1 1zm4 0c-.55 0-1-.45-1-1V8c0-.55.45-1 1-1s1 .45 1 1v8c0\r\n        .55-.45 1-1 1zm4 0c-.55 0-1-.45-1-1v-2c0-.55.45-1 1-1s1 .45 1 1v2c0\r\n        .55-.45 1-1 1z\" />\r\n    </svg>\r\n    <span>Dashboard</span>\r\n  </button>\r\n  <button\r\n    class=\"flex flex-col items-center justify-center w-1/2 py-1 {$view === 'settings' ? 'active' : 'inactive'}\"\r\n    on:click={() => setView('settings')}>\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-8 h-8\" viewBox=\"0 0 24 24\">\r\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n      <path\r\n        d=\"M12 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm7-7H5c-1.11 0-2\r\n        .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-1.75 9c0\r\n        .23-.02.46-.05.68l1.48 1.16c.13.11.17.3.08.45l-1.4\r\n        2.42c-.09.15-.27.21-.43.15l-1.74-.7c-.36.28-.76.51-1.18.69l-.26\r\n        1.85c-.03.17-.18.3-.35.3h-2.8c-.17\r\n        0-.32-.13-.35-.29l-.26-1.85c-.43-.18-.82-.41-1.18-.69l-1.74.7c-.16.06-.34\r\n        0-.43-.15l-1.4-2.42c-.09-.15-.05-.34.08-.45l1.48-1.16c-.03-.23-.05-.46-.05-.69\r\n        0-.23.02-.46.05-.68l-1.48-1.16c-.13-.11-.17-.3-.08-.45l1.4-2.42c.09-.15.27-.21.43-.15l1.74.7c.36-.28.76-.51\r\n        1.18-.69l.26-1.85c.03-.17.18-.3.35-.3h2.8c.17 0 .32.13.35.29l.26\r\n        1.85c.43.18.82.41 1.18.69l1.74-.7c.16-.06.34 0 .43.15l1.4\r\n        2.42c.09.15.05.34-.08.45l-1.48 1.16c.03.23.05.46.05.69z\" />\r\n    </svg>\r\n    <span>Settings</span>\r\n  </button>\r\n</nav>\r\n<div\r\n  class=\"fixed bottom-0 w-full flex items-center justify-center mb-6\r\n  pointer-events-none\">\r\n  <button\r\n    id=\"entry-button\"\r\n    class=\"rounded-full w-16 h-16 flex items-center p-4 fill-current text-white\r\n    shadow-lg pointer-events-auto\"\r\n    style=\"background-color:hsl(var(--accent-hue), 50%, 50%); box-shadow: 0px\r\n    10px 15px 0px hsla(var(--accent-hue), 35%, 75%,0.85);\"\r\n    on:click={() => setView('entry')}>\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      class=\"h-8 w-8\"\r\n      viewBox=\"0 0 24 24\"\r\n      enable-background=\"new 0 0 24 24\"\r\n      xml:space=\"preserve\">\r\n      <g id=\"Bounding_Box\">\r\n        <rect fill=\"none\" width=\"24\" height=\"24\" />\r\n        <rect fill=\"none\" width=\"24\" height=\"24\" />\r\n      </g>\r\n      <g id=\"Flat\">\r\n        <g id=\"ui_x5F_spec_x5F_header_copy_2\" />\r\n        <g>\r\n          <path\r\n            d=\"M18,12c-0.55,0-1,0.45-1,1v5.22c0,0.55-0.45,1-1,1H6c-0.55,0-1-0.45-1-1V8c0-0.55,0.45-1,1-1h5c0.55,0,1-0.45,1-1\r\n            c0-0.55-0.45-1-1-1H5C3.9,5,3,5.9,3,7v12c0,1.1,0.9,2,2,2h12c1.1,0,2-0.9,2-2v-6C19,12.45,18.55,12,18,12z\" />\r\n          <path\r\n            d=\"M21.02,5H19V2.98C19,2.44,18.56,2,18.02,2h-0.03C17.44,2,17,2.44,17,2.98V5h-2.01C14.45,5,14.01,5.44,14,5.98\r\n            c0,0.01,0,0.02,0,0.03C14,6.56,14.44,7,14.99,7H17v2.01c0,0.54,0.44,0.99,0.99,0.98c0.01,0,0.02,0,0.03,0\r\n            c0.54,0,0.98-0.44,0.98-0.98V7h2.02C21.56,7,22,6.56,22,6.02V5.98C22,5.44,21.56,5,21.02,5z\" />\r\n          <path\r\n            d=\"M14,9H8c-0.55,0-1,0.45-1,1c0,0.55,0.45,1,1,1h6c0.55,0,1-0.45,1-1C15,9.45,14.55,9,14,9z\" />\r\n          <path\r\n            d=\"M14,12H8c-0.55,0-1,0.45-1,1c0,0.55,0.45,1,1,1h6c0.55,0,1-0.45,1-1C15,12.45,14.55,12,14,12z\" />\r\n          <path\r\n            d=\"M14,15H8c-0.55,0-1,0.45-1,1c0,0.55,0.45,1,1,1h6c0.55,0,1-0.45,1-1C15,15.45,14.55,15,14,15z\" />\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  </button>\r\n</div>\r\n{#if $view === 'entry'}\r\n  <div>\r\n    <Entry />\r\n  </div>\r\n{/if}\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import { fly, fade, scale, crossfade } from \"svelte/transition\";\r\n  import { typeDesigns, convertRemToPixels } from \"../util\";\r\n  import { detailData } from \"../store/store\";\r\n  import { quintOut } from \"svelte/easing\";\r\n  import { flip } from \"svelte/animate\";\r\n\r\n  let buckets = [];\r\n  let materialIcon, backgroundColor, iconColor;\r\n  let scrolling = false;\r\n  let sortByDate = true;\r\n  let sortedData = [];\r\n\r\n  const [send, receive] = crossfade({\r\n    duration: d => Math.sqrt(d * 200),\r\n\r\n    fallback(node, params) {\r\n      return {\r\n        duration: 120,\r\n        easing: quintOut,\r\n        css: t => `\r\n\t\t\t\t\topacity: ${t}\r\n\t\t\t\t`\r\n      };\r\n    }\r\n  });\r\n\r\n  onMount(() => {\r\n    createBuckets().then(result => (buckets = result));\r\n\r\n    const typeDesign = typeDesigns.filter(\r\n      obj => obj.type === $detailData.type\r\n    )[0];\r\n    const hue = typeDesign.hue;\r\n    materialIcon = typeDesign.materialIcon;\r\n    backgroundColor = \"hsl(\" + hue + \", 50%, 80%)\";\r\n    iconColor = \"hsl(\" + hue + \", 65%, 40%)\";\r\n\r\n    document.getElementById(\"detail-page\").addEventListener(\"scroll\", ev => {\r\n      ev.target.scrollTop > 0 ? (scrolling = true) : (scrolling = false);\r\n    });\r\n  });\r\n\r\n  async function createBuckets() {\r\n    let buckets = [];\r\n\r\n    await $detailData.data.forEach((data, i, arry) => {\r\n      const year = +data.date.substring(0, 4);\r\n      const month = +data.date.substring(5, 7);\r\n      let previousYear, previousMonth;\r\n\r\n      if (buckets.length > 0) {\r\n        previousYear = +buckets[buckets.length - 1].year;\r\n        previousMonth = +buckets[buckets.length - 1].month;\r\n      }\r\n\r\n      if (i > 0 && year + month !== previousYear + previousMonth) {\r\n        buckets.push({\r\n          year: year,\r\n          month: month\r\n        });\r\n      } else if (i === 0) {\r\n        buckets.push({\r\n          year: year,\r\n          month: month\r\n        });\r\n      }\r\n    });\r\n\r\n    buckets.sort((first, second) => {\r\n      if (first.month > second.month) {\r\n        return 1;\r\n      } else {\r\n        return -1;\r\n      }\r\n    });\r\n\r\n    buckets.sort((first, second) => {\r\n      if (first.year < second.year) {\r\n        return 1;\r\n      } else {\r\n        return -1;\r\n      }\r\n    });\r\n\r\n    return buckets;\r\n  }\r\n\r\n  $: if ($detailData.data) {\r\n    if (sortByDate) {\r\n      sortedData = $detailData.data.sort((a, b) => {\r\n        if (b.date > a.date) {\r\n          return 1;\r\n        } else {\r\n          return -1;\r\n        }\r\n      });\r\n    } else {\r\n      sortedData = $detailData.data.sort((a, b) => b.amount - a.amount);\r\n    }\r\n  }\r\n</script>\r\n\r\n<style type=\"text/postcss\">.wrap:before{border-top:1px solid #d3d3d3;-webkit-transform:translateY(-50%);transform:translateY(-50%);position:absolute;left:5%;top:50%;width:90%;content:\"\"}</style>\r\n\r\n<div\r\n  id=\"detail-page\"\r\n  class=\"h-screen w-full bg-white relative overflow-auto\"\r\n  transition:fly={{ y: window.innerHeight, duration: 80 }}>\r\n  <div\r\n    class=\"w-full flex flex-row p-4 bg-white {scrolling ? 'shadow' : ''} fixed\r\n    top-0 justify-between z-20\"\r\n    style=\"height: 56px\">\r\n    <i\r\n      class=\"material-icons fill-current\"\r\n      style=\"color:{iconColor}\"\r\n      in:fly={{ x: -24, duration: 80, delay: 100 }}\r\n      on:click={() => window.history.back()}>\r\n      arrow_back\r\n    </i>\r\n    <button\r\n      on:click={() => (sortByDate = !sortByDate)}\r\n      class=\"fill-current\"\r\n      style=\"color: {iconColor}\"\r\n      in:fade={{ duration: 80 }}>\r\n      <div class=\"relative\">\r\n        {#if sortByDate}\r\n          <i class=\"material-icons md-18\" in:fly={{ y: -48, duration: 80 }}>\r\n            date_range\r\n          </i>\r\n        {:else}\r\n          <i class=\"material-icons md-18\" in:fly={{ y: -48, duration: 80 }}>\r\n            attach_money\r\n          </i>\r\n        {/if}\r\n      </div>\r\n    </button>\r\n  </div>\r\n  <div id=\"content\" class=\"flex flex-col\">\r\n    <div class=\"flex flex-col items-center\">\r\n      <div\r\n        class=\"icon rounded-full p-6 mt-20 mb-4\"\r\n        id=\"icon\"\r\n        in:scale={{ initial: 0.25, duration: 180, delay: 100 }}\r\n        style=\"background-color: {backgroundColor}\">\r\n        <i\r\n          class=\"material-icons fill-current\"\r\n          style=\"display:block !important; color: {iconColor}; font-size: 64px\">\r\n          {materialIcon}\r\n        </i>\r\n      </div>\r\n      <span\r\n        class=\"text-2xl font-bold mb-8\"\r\n        in:fly={{ y: 32, duration: 100, delay: 120 }}\r\n        style=\"color: {iconColor}\">\r\n        {$detailData.type}\r\n      </span>\r\n    </div>\r\n    {#each buckets as bucket, index}\r\n      {#if index === 0 || (index > 0 && buckets[index - 1].year !== bucket.year)}\r\n        <span\r\n          class=\"rounded-full bg-gray-600 text-white font-bold px-4 py-2 my-4\r\n          sticky top-0 z-10 m-auto\"\r\n          style=\"top: {56 + convertRemToPixels(1)}px\">\r\n          {bucket.year}\r\n        </span>\r\n      {/if}\r\n      <div\r\n        class=\"flex flex-col justify-center items-center\"\r\n        in:fade={{ duration: 140, delay: 120 }}>\r\n        <div class=\"wrap w-full relative text-center mt-4 mb-2\">\r\n          <span class=\"relative text-gray-600 font-bold bg-white px-4\">\r\n            {new Date(2019, bucket.month - 1, 1).toDateString().substring(4, 7)}\r\n          </span>\r\n        </div>\r\n        {#each sortedData as data (data.id)}\r\n          <div\r\n            in:receive={{ key: data.id }}\r\n            out:send={{ key: data.id }}\r\n            animate:flip={{ duration: 350 }}\r\n            class=\"w-full bg-white\">\r\n            {#if data.date.substring(0, 4) == bucket.year && data.date.substring(5, 7) == bucket.month}\r\n              <div class=\"flex flex-row p-4 items-center\">\r\n                <div\r\n                  class=\"w-10 rounded-lg flex flex-col items-center\r\n                  justify-between py-1 mr-4\"\r\n                  style=\"background-color:{backgroundColor}; color:{iconColor}\">\r\n                  <span class=\"font-bold text-xs\">\r\n                    {new Date(2019, bucket.month - 1, 1)\r\n                      .toDateString()\r\n                      .substring(4, 7)}\r\n                  </span>\r\n                  <span class=\"font-bold\">{new Date(data.date).getDate()}</span>\r\n                </div>\r\n                <div\r\n                  class=\"flex flex-col flex-grow items-start justify-around\r\n                  truncate mr-4\">\r\n                  <span class=\"font-bold w-full truncate\">{data.addedBy}</span>\r\n                  <span class=\"text-gray-600 w-full truncate\">{data.desc}</span>\r\n                </div>\r\n                <span>${data.amount.toFixed(2)}</span>\r\n              </div>\r\n            {/if}\r\n          </div>\r\n        {/each}\r\n      </div>\r\n    {/each}\r\n  </div>\r\n\r\n</div>\r\n",
    "<script>\r\n  import { view, toastMessage, userInfo } from \"../store/store\";\r\n  import { onMount } from \"svelte\";\r\n  import TypeButton from \"./TypeButton.svelte\";\r\n  import LoadingSpinner from \"./LoadingSpinner.svelte\";\r\n  import { typeDesigns } from \"../util\";\r\n  import { fly, fade } from \"svelte/transition\";\r\n  import firebase from \"firebase/app\";\r\n  import \"firebase/firestore\";\r\n\r\n  let description = \"\";\r\n  let amount = 0;\r\n  let date = new Date().toISOString().substring(0, 10);\r\n  let type = \"Food\";\r\n\r\n  let amountValid = false;\r\n  let dateValid = false;\r\n  let typeValid = false;\r\n\r\n  let wrapperEl;\r\n\r\n  onMount(() => {\r\n    wrapperEl = document.getElementById(\"entry-wrapper\");\r\n    //Scroll down a little so that we can set the trigger to dismiss is scrollY = 0\r\n    wrapperEl.scrollTop = 120;\r\n    wrapperEl.onscroll = () => {\r\n      if (wrapperEl.scrollTop === 0) {\r\n        window.history.back();\r\n      }\r\n    };\r\n\r\n    document.getElementById(\"amount-input\").focus();\r\n    document.execCommand(\"selectall\", null, false);\r\n  });\r\n\r\n  function setDate(dateToSet) {\r\n    if (dateToSet === \"today\") {\r\n      date = new Date().toISOString().substring(0, 10);\r\n      document.getElementById(\"today-button\").classList.add(\"active\");\r\n      document.getElementById(\"yesterday-button\").classList.remove(\"active\");\r\n    } else if (dateToSet === \"yesterday\") {\r\n      date = new Date(Date.now() - 86400000).toISOString().substring(0, 10);\r\n      document.getElementById(\"yesterday-button\").classList.add(\"active\");\r\n      document.getElementById(\"today-button\").classList.remove(\"active\");\r\n    }\r\n  }\r\n\r\n  function receiveType(e) {\r\n    type = e.detail.selectedType;\r\n  }\r\n\r\n  function sendEntry() {\r\n    window.history.back();\r\n    toastMessage.set(\"Submitting...\");\r\n\r\n    const db = firebase.firestore();\r\n    db.collection(\"expenses\")\r\n      .doc(Date.now().toString() + amount)\r\n      .set({\r\n        amount: amount,\r\n        date: date,\r\n        desc: description,\r\n        type: type,\r\n        addedBy: $userInfo.displayName,\r\n        addedOn: new Date().toISOString().substring(0, 10),\r\n        id: Date.now().toString() + amount\r\n      })\r\n      .then(() => {\r\n        toastMessage.set(\"Expense created!\");\r\n        setTimeout(() => toastMessage.set(\"\"), 1000);\r\n      })\r\n      .catch(error => {\r\n        toastMessage.set(error);\r\n        setTimeout(() => toastMessage.set(\"\"), 3000);\r\n      });\r\n  }\r\n\r\n  $: if (amount <= 0 || amount === undefined) {\r\n    amountValid = false;\r\n  } else {\r\n    amountValid = true;\r\n  }\r\n\r\n  $: if (date !== \"\") {\r\n    dateValid = true;\r\n  } else {\r\n    dateValid = false;\r\n  }\r\n\r\n  $: if (type !== \"\") {\r\n    typeValid = true;\r\n  } else {\r\n    typeValid = false;\r\n  }\r\n</script>\r\n\r\n<style type=\"text/postcss\">#entry-wrapper::-webkit-scrollbar{display:none}input{outline:none!important;padding:.25rem .5rem;margin-right:1rem;width:66.66667%;-webkit-appearance:none;-moz-appearance:none;appearance:none;text-align:right;font-weight:700;color:#718096;background-color:transparent}.input-error{background-color:rgba(220,20,60,.2);box-shadow:inset 0 0 0 2px #dc143c;color:#dc143c}label{color:#2d3748;font-size:1.5rem;font-weight:700;margin-left:1rem;margin-right:.5rem;width:33.33333%}.input-row{display:flex;flex-direction:row;width:100%;justify-content:space-between;align-items:center;margin-top:2rem}.date-button{border-radius:9999px;background-color:#e2e8f0;color:#fff;padding:.25rem .75rem;font-weight:700;transition:background-color .35s}.date-button.active{background-color:hsl(var(--secondary-hue),50%,50%)}.type-button{border-radius:9999px;padding:.5rem;fill:currentColor;background-color:#cbd5e0;color:#2d3748;margin-right:1rem;margin-top:1rem}.type-button svg{width:2rem;height:2rem}</style>\r\n\r\n<div\r\n  id=\"entry-wrapper\"\r\n  class=\"absolute top-0 w-full h-screen z-10 overflow-x-hidden\"\r\n  style=\"background-color: rgba(0,0,0,0.2)\"\r\n  transition:fade={{ duration: 180 }}>\r\n  <div\r\n    transition:fly={{ y: 300, duration: 250 }}\r\n    class=\"flex flex-col items-start justify-around bg-white mt-32\"\r\n    style=\"border-top-left-radius: 1rem; border-top-right-radius: 1rem\">\r\n    <div class=\"input-row\">\r\n      <label for=\"amount-input\">Amount</label>\r\n      <input\r\n        id=\"amount-input\"\r\n        class=\"amount text-2xl\"\r\n        type=\"number\"\r\n        min=\"0\"\r\n        bind:value={amount}\r\n        on:click={() => document.execCommand('selectall', null, false)} />\r\n    </div>\r\n    <div class=\"input-row\">\r\n      <label for=\"date-input\">Date</label>\r\n      <div class=\"mr-4\">\r\n        <button\r\n          id=\"today-button\"\r\n          class=\"date-button active\"\r\n          on:click={() => setDate('today')}>\r\n          Today\r\n        </button>\r\n        <button\r\n          id=\"yesterday-button\"\r\n          class=\"date-button\"\r\n          on:click={() => setDate('yesterday')}>\r\n          Yesterday\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div\r\n      class=\"flex flex-row w-full justify-between items-center mt-2 text-lg\r\n      text-gray-600 ml-4\">\r\n      <span>Other date</span>\r\n      <input id=\"date-input\" type=\"date\" bind:value={date} />\r\n    </div>\r\n    <div class=\"input-row\">\r\n      <label for=\"description-input\">Description</label>\r\n      <input\r\n        class=\"truncate text-2xl\"\r\n        id=\"description-input\"\r\n        type=\"text\"\r\n        placeholder=\"...\"\r\n        bind:value={description}\r\n        on:click={() => document.execCommand('selectall', null, false)} />\r\n    </div>\r\n    <div class=\"mt-8 flex flex-col\">\r\n      <label>Type</label>\r\n      <div class=\"w-full flex flex-row flex-wrap justify-start\">\r\n        {#each typeDesigns as typeDesign}\r\n          <TypeButton\r\n            label={typeDesign.type}\r\n            colorHue={typeDesign.hue}\r\n            on:dispatchType={receiveType}\r\n            isActive={type === typeDesign.type}\r\n            materialIcon={typeDesign.materialIcon} />\r\n        {/each}\r\n      </div>\r\n    </div>\r\n    <div class=\"w-full text-center block\">\r\n      <button\r\n        class=\"rounded-full px-4 py-2 text-white text-2xl font-bold w-4/5 mt-12\r\n        mb-8 bg-gray-300\"\r\n        on:click={() => sendEntry()}\r\n        style={typeValid && dateValid && amountValid ? 'background-color:hsl(var(--accent-hue), 50%, 50%)' : ''}>\r\n        Submit\r\n      </button>\r\n    </div>\r\n    <button\r\n      class=\"w-full text-center mb-8 bg-transparent\"\r\n      style=\"color: hsl(var(--secondary-hue), 50%, 50%)\"\r\n      on:click={() => window.history.back()}>\r\n      Cancel\r\n    </button>\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  import { createEventDispatcher } from \"svelte\";\r\n  import { onMount } from \"svelte\";\r\n\r\n  export let label = \"\";\r\n  export let colorHue = 180;\r\n  export let isActive = false;\r\n  export let materialIcon = \"\";\r\n\r\n  onMount(() => {\r\n    setButtonColors(isActive);\r\n  });\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  function dispatchType() {\r\n    dispatch(\"dispatchType\", {\r\n      selectedType: label\r\n    });\r\n  }\r\n\r\n  function setButtonColors(buttonActive) {\r\n    if (buttonActive) {\r\n      document\r\n        .getElementById(label + \"-button\")\r\n        .style.setProperty(\r\n          \"background-color\",\r\n          \"hsl(\" + colorHue + \", 50%, 80%)\"\r\n        );\r\n      document\r\n        .getElementById(label + \"-button\")\r\n        .style.setProperty(\"color\", \"hsl(\" + colorHue + \", 65%, 40%)\");\r\n\r\n      document\r\n        .getElementById(label + \"-label\")\r\n        .style.setProperty(\"color\", \"hsl(\" + colorHue + \", 65%, 40%)\");\r\n    } else {\r\n      document\r\n        .getElementById(label + \"-button\")\r\n        .style.setProperty(\"background-color\", \"#edf2f7\");\r\n      document\r\n        .getElementById(label + \"-button\")\r\n        .style.setProperty(\"color\", \"#cbd5e0\");\r\n\r\n      document\r\n        .getElementById(label + \"-label\")\r\n        .style.setProperty(\"color\", \"#cbd5e0\");\r\n    }\r\n  }\r\n\r\n  $: if (document.getElementById(label + \"-button\")) {\r\n    setButtonColors(isActive);\r\n  }\r\n</script>\r\n\r\n<style type=\"text/postcss\">.wrapper{display:flex;flex-direction:column;align-items:center;justify-content:center;width:33.33333%;margin-top:1rem;transition-timing-function:ease-in;transition:all .35s}.type-button{border-radius:9999px;padding:.5rem;fill:currentColor;background-color:#edf2f7;color:#cbd5e0;text-align:center;vertical-align:middle}.type-button i{display:block!important}</style>\r\n\r\n<div class=\"wrapper\">\r\n  <button\r\n    class=\"type-button\"\r\n    title={label}\r\n    id=\"{label}-button\"\r\n    on:click={() => dispatchType()}>\r\n    <i class=\"material-icons\">{materialIcon}</i>\r\n  </button>\r\n  <span class=\"text-gray-400\" id=\"{label}-label\">{label}</span>\r\n</div>\r\n",
    "<script>\r\n  export let text = \"\";\r\n</script>\r\n\r\n<style type=\"text/postcss\">.dot{-webkit-animation:scale 1s ease-in-out 1.4s infinite both,fade 1s ease-in-out 1.4s infinite both;animation:scale 1s ease-in-out 1.4s infinite both,fade 1s ease-in-out 1.4s infinite both;line-height:.5;color:#fff;font-size:3rem;opacity:0}.dot:first-child{-webkit-animation-delay:-.32s;animation-delay:-.32s}.dot:nth-child(2){-webkit-animation-delay:-.16s;animation-delay:-.16s}.dot:nth-child(3){-webkit-animation-delay:0s;animation-delay:0s}@-webkit-keyframes scale{0%,to{-webkit-transform-origin:center;transform-origin:center;-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform-origin:center;transform-origin:center;-webkit-transform:scale(1.5);transform:scale(1.5)}}@keyframes scale{0%,to{-webkit-transform-origin:center;transform-origin:center;-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform-origin:center;transform-origin:center;-webkit-transform:scale(1.5);transform:scale(1.5)}}@-webkit-keyframes fade{0%,to{opacity:1}50%{opacity:0}}@keyframes fade{0%,to{opacity:1}50%{opacity:0}}</style>\r\n\r\n<div class=\"w-full h-auto\">\r\n  <div class=\"flex text-center justify-center items-center\">\r\n    <div class=\"dot\">\r\n      <div>·</div>\r\n    </div>\r\n    <div class=\"dot\">\r\n      <div>·</div>\r\n    </div>\r\n    <div class=\"dot\">\r\n      <div>·</div>\r\n    </div>\r\n  </div>\r\n  {#if text !== undefined}\r\n    <body class=\"w-full text-center text-primaryColor absolute bottom-0\">\r\n      {text}\r\n    </body>\r\n  {/if}\r\n</div>\r\n"
  ],
  "names": [],
  "mappings": "AA0M2B,8BAAgB,CAAC,cAAc,MAAM,CAAC,iBAAiB,OAAO,CAAC,MAAM,IAAI,CAAC,YAAY,MAAM,CAAC,eAAe,MAAM,CAAC,YAAY,GAAG,CAAC,MAAM,GAAG,CAAC,UAAU,CAAC,CAAC,WAAW,gBAAgB,CAAC,IAAI,CAAC,8BAAgB,KAAK,WAAW,CAAC,CAAC,aAAa,KAAK,CAAC,gBAAgB,qBAAO,CAAC,iBAAiB,IAAI,IAAI,eAAe,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;ACrL1T,qCAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,IAAI,CAAC,QAAQ,IAAI,CAAC,SAAS,KAAK,CAAC,OAAO,CAAC,CAAC,iBAAiB,IAAI,CAAC,KAAK,YAAY,CAAC,sBAAO,CAAC,sBAAO,CAAC,MAAM,IAAI,IAAI,aAAa,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,sBAAO,CAAC,wBAAS,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,MAAM,OAAO,CAAC,UAAU,OAAO,CAAC,sCAAQ,CAAC,SAAS,QAAQ,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,MAAM,CAAC,OAAO,IAAI,CAAC;ACmFjY,mBAAK,OAAO,CAAC,WAAW,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,kBAAkB,WAAW,IAAI,CAAC,CAAC,UAAU,WAAW,IAAI,CAAC,CAAC,SAAS,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,QAAQ,EAAE,CAAC;ACR/J,6BAAc,mBAAmB,CAAC,QAAQ,IAAI,CAAC,oBAAK,CAAC,QAAQ,IAAI,UAAU,CAAC,QAAQ,MAAM,CAAC,KAAK,CAAC,aAAa,IAAI,CAAC,MAAM,SAAS,CAAC,mBAAmB,IAAI,CAAC,gBAAgB,IAAI,CAAC,WAAW,IAAI,CAAC,WAAW,KAAK,CAAC,YAAY,GAAG,CAAC,MAAM,OAAO,CAAC,iBAAiB,WAAW,CAAC,AAAkG,oBAAK,CAAC,MAAM,OAAO,CAAC,UAAU,MAAM,CAAC,YAAY,GAAG,CAAC,YAAY,IAAI,CAAC,aAAa,KAAK,CAAC,MAAM,SAAS,CAAC,yBAAU,CAAC,QAAQ,IAAI,CAAC,eAAe,GAAG,CAAC,MAAM,IAAI,CAAC,gBAAgB,aAAa,CAAC,YAAY,MAAM,CAAC,WAAW,IAAI,CAAC,2BAAY,CAAC,cAAc,MAAM,CAAC,iBAAiB,OAAO,CAAC,MAAM,IAAI,CAAC,QAAQ,MAAM,CAAC,MAAM,CAAC,YAAY,GAAG,CAAC,WAAW,gBAAgB,CAAC,IAAI,CAAC,YAAY,sBAAO,CAAC,iBAAiB,IAAI,IAAI,eAAe,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;ACzClyB,oCAAQ,CAAC,QAAQ,IAAI,CAAC,eAAe,MAAM,CAAC,YAAY,MAAM,CAAC,gBAAgB,MAAM,CAAC,MAAM,SAAS,CAAC,WAAW,IAAI,CAAC,2BAA2B,OAAO,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,wCAAY,CAAC,cAAc,MAAM,CAAC,QAAQ,KAAK,CAAC,KAAK,YAAY,CAAC,iBAAiB,OAAO,CAAC,MAAM,OAAO,CAAC,WAAW,MAAM,CAAC,eAAe,MAAM,CAAC,0BAAY,CAAC,eAAC,CAAC,QAAQ,KAAK,UAAU,CAAC;ACnDrW,kBAAI,CAAC,kBAAkB,mBAAK,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAI,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,mBAAK,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAI,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,MAAM,IAAI,CAAC,UAAU,IAAI,CAAC,QAAQ,CAAC,CAAC,kBAAI,YAAY,CAAC,wBAAwB,KAAK,CAAC,gBAAgB,KAAK,CAAC,kBAAI,WAAW,CAAC,CAAC,CAAC,wBAAwB,KAAK,CAAC,gBAAgB,KAAK,CAAC,kBAAI,WAAW,CAAC,CAAC,CAAC,GAAG,qBAAqB,EAAE,CAAC,gBAAgB,EAAE,CAAC,mBAAmB,mBAAK,CAAC,EAAE,CAAC,EAAE,CAAC,yBAAyB,MAAM,CAAC,iBAAiB,MAAM,CAAC,kBAAkB,MAAM,CAAC,CAAC,CAAC,UAAU,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,yBAAyB,MAAM,CAAC,iBAAiB,MAAM,CAAC,kBAAkB,MAAM,GAAG,CAAC,CAAC,UAAU,MAAM,GAAG,CAAC,CAAC,CAAC,WAAW,mBAAK,CAAC,EAAE,CAAC,EAAE,CAAC,yBAAyB,MAAM,CAAC,iBAAiB,MAAM,CAAC,kBAAkB,MAAM,CAAC,CAAC,CAAC,UAAU,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,yBAAyB,MAAM,CAAC,iBAAiB,MAAM,CAAC,kBAAkB,MAAM,GAAG,CAAC,CAAC,UAAU,MAAM,GAAG,CAAC,CAAC,CAAC,mBAAmB,kBAAI,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,kBAAI,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC"
}